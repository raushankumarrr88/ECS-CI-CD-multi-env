version: 0.2

phases:
  install:
    commands:
      - echo "this pipeline has the below role"
      - aws sts get-caller-identity
      - echo "Installing Terraform"
      - curl -LO "https://releases.hashicorp.com/terraform/$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)/terraform_$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)_linux_amd64.zip"
      - unzip terraform_*.zip
      - sudo mv terraform /usr/local/bin/
      - terraform version
      - echo "Terraform installed successfully"

  pre_build:
    commands:
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME
      - echo REPOSITORY_URI
      - echo "Initializing Terraform"
      - cd devops/terraform
      - terraform init -backend-config="region=$AWS_DEFAULT_REGION"
      - if [ "$DESTROY_RESOURCES" = "true" ]; then
          echo "Destroying Terraform infrastructure";
          terraform destroy -auto-approve -var "aws_region=$AWS_DEFAULT_REGION" -var "ecr_repository_name=$ECR_REPOSITORY_NAME" -var "aws_account_id=$AWS_ACCOUNT_ID";
        else
          echo "Planning Terraform changes";
          terraform plan -var "aws_region=$AWS_DEFAULT_REGION" -var "ecr_repository_name=$ECR_REPOSITORY_NAME" -var "aws_account_id=$AWS_ACCOUNT_ID";
          echo "Applying Terraform changes";
          terraform apply -auto-approve -var "aws_region=$AWS_DEFAULT_REGION" -var "ecr_repository_name=$ECR_REPOSITORY_NAME" -var "aws_account_id=$AWS_ACCOUNT_ID";
        fi

  build:
    commands:
      - echo "Logging in to Amazon ECR"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "Building Docker image"
      - cd ../..
      - docker build -t $ECR_REPOSITORY_NAME:$IMAGE_TAG .
      - cd devops/terraform
      - echo "Tagging Docker image"
      - docker tag $ECR_REPOSITORY_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing Docker image to Amazon ECR"
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
      - echo "Docker image pushed to ECR successfully"
      - pwd
      - echo "Writing image definitions file"
      - printf '[{"name":"dev","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > ./imagedefinitions.json
      - ls -al
      - cat ./imagedefinitions.json

artifacts:
  files:
    - ./imagedefinitions.json
  base-directory: .
